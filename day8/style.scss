* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;

}

.frame {
    /* background-color: aqua; */
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;

    .center {
        width: 400px;
        height: 400px;
        background-color: black;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
    }

    .ball {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background-color: #fff;
        filter: blur(1px);
    }

    @for $i from 1 through 8 {
        .buuble-#{$i} {
            position: absolute;
            top: 180px;
            left: 180px;
            width: 50px;
            height: 50px;
            transform: rotate((random(300)) + deg);

            &:after {
                position: absolute;
                display: block;
                content: '';
                width: 50px;
                height: 50px;
                background: #fff;
                border-radius: 50%;
                transform-origin: (50 - $i * 3) + px (50 - $i * 3) + px;
                animation: rotate (2.5 + $i / 5) + s ease-in-out ($i / 5) + s infinite;
                filter: blur(1px);
            }
        }
    }

    @for $i from 1 through 10 {
        .sparkle-#{$i} {
            position: absolute;
            top: 200px;
            left: 200px;
            transform: rotate((random(300)) + deg);

            &:after {
                position: absolute;
                display: block;
                content: '';
                width: (7 + $i) + px;
                height: (7 + $i) + px;
                background: #fff;
                border-radius: 50%;
                transform-origin: (60 - $i * 2) + px (60 - $i * 2) + px;
                animation: rotate (3.5 + $i / 5) + s ease-in-out ($i / 5) + s infinite;
                filter: blur(1px);
            }
        }
    }

    @keyframes rotate {
        from {
            transform: rotate(0deg) translate3d(0, 0, 0);
        }

        to {
            transform: rotate(360deg) translate3d(0, 0, 0);
        }
    }


}